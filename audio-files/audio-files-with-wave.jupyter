nbformat 4
nbformat_minor 0
markdown
    # Reading and Writing Audio Files with wave
markdown
    [back to overview page](index.ipynb)
markdown
    The `wave` module is part of the Python standard library.
    
    Documentation:
    
    * http://docs.python.org/2/library/wave.html (Python 2.x)
    * http://docs.python.org/3/library/wave.html (Python 3.x)
    
    Audio data is handled with Python strings/buffers.
    
    Advantages:
    
    * part of the standard library, no further dependencies
    * 24-bit files can be used (with manual conversion)
    * partial reading is possible
    * works with both Python 2 and 3
    
    Disadvantages:
    
    * 32-bit float not supported
    * WAVEX doesn't work
    * manual de-interleaving and conversion is necessary
markdown
    ## Reading
markdown
    Reading a 16-bit WAV file into a NumPy array is not hard, but it requires a few lines of code:
code 1
    import wave
    import numpy as np
    from contextlib import closing
    from utility import pcm2float
    
    with closing(wave.open('data/test_wav_pcm16.wav')) as w:
        channels = w.getnchannels()
        assert w.getsampwidth() == 2
        data = w.readframes(w.getnframes())
    
    sig = np.frombuffer(data, dtype='<i2').reshape(-1, channels)
    
    normalized = pcm2float(sig, np.float32)
  metadata
    {
     "collapsed": false
    }
markdown
    But not so fast! Let's do that step-by-step and put a few explanations in between.
    
    First, let's enable inline plotting and load all the NumPy goodies into the local namespace:
code 2
    %pylab inline
  stream stdout
    Populating the interactive namespace from numpy and matplotlib
  metadata
    {
     "collapsed": false
    }
markdown
    The only module we really need to load is `wave`. However, let's also load `contextlib.closing` in order to be able to automagically close all our opened files:
code 3
    import wave
    from contextlib import closing
    
    # Note: starting from Python 3.4, wave.open() returns a context manager, closing() won't be necessary anymore
  metadata
    {
     "collapsed": false
    }
markdown
    Now we open a 16-bit WAV file, show a few informations and read its contents.
code 4
    with closing(wave.open('data/test_wav_pcm16.wav')) as w:
        framerate = w.getframerate()
        frames = w.getnframes()
        channels = w.getnchannels()
        width = w.getsampwidth()
        print("sampling rate = {framerate} Hz, length = {frames} samples, channels = {channels}, sample width = {width} bytes".format(**locals()))
        
        data = w.readframes(frames)
  stream stdout
    sampling rate = 44100 Hz, length = 15 samples, channels = 7, sample width = 2 bytes
  metadata
    {
     "collapsed": false
    }
markdown
    We see that the *sample width* is 2 bytes, which we expected for a 16-bit file.
    
    If the audio file has 7 channels, is 15 samples long and uses 2 bytes (16 bit) per sample, the buffer has a size of $7 \times 15 \times 2 = 210$ bytes.
code 5
    len(data)
  execute_result
  - text/plain
    210
  metadata
    {
     "collapsed": false
    }
markdown
    Audio data is stored in a Python buffer object (basically a contiguous memory area with bytes of data). In Python 2 this looks somehow like a string object, in Python 3 it's an object of type `bytes`.
code 6
    type(data)
  execute_result
  - text/plain
    bytes
  metadata
    {
     "collapsed": false
    }
markdown
    The buffer data looks like this (which isn't really helpful):
code 7
    data
  execute_result
  - text/plain
    b'\xff\x7f\xb6mm[$I\xdb6\x92$I\x12RsgDX\x14\xba\xef\xcc\xdd\r\xdf\xb7\xed\xceO\x96\xe7\xa1\xad\x1a\xbe\xcb\xf3\xcd\x16I\x12{\x1c\'\x9d\xff\xc6\x9a-l1\xdd\xf7\xb7\xed\x85\xe3\'\x9d\x019\x9a-\x94\xce\xdd\xf7I\x122\xb0\x96\xe7_R\x1a\xbe5\x0c\xcd\x16\xb7\xed\xae\x8cgD\xa8\xeb\xba\xef4"\r\xdfI\x12\x01\x80\xb6m\x93\xa4$I%\xc9\x92$\xb7\xed\xae\x8cgD\xa8\xeb\xba\xef4"\r\xdfI\x122\xb0\x96\xe7_R\x1a\xbe5\x0c\xcd\x16\xb7\xed\x85\xe3\'\x9d\x019\x9a-\x94\xce\xdd\xf7I\x12{\x1c\'\x9d\xff\xc6\x9a-l1\xdd\xf7\xb7\xed\xceO\x96\xe7\xa1\xad\x1a\xbe\xcb\xf3\xcd\x16I\x12RsgDX\x14\xba\xef\xcc\xdd\r\xdf\xb7\xed\xff\x7f\xb6mm[$I\xdb6\x92$I\x12'
  metadata
    {
     "collapsed": false
    }
markdown
    We could convert the bytes by means of the `struct` module, but it's easier with the `frombuffer()` function from NumPy.
    We have to specify (similar to how it's done in the `struct` module) how the bytes should be interpreted to yield the desired numbers.
    
    If we would interpret them as single (unsigned) bytes, it would look like this (still not very useful):
code 8
    frombuffer(data, dtype='B')
  execute_result
  - text/plain
    array([255, 127, 182, 109, 109,  91,  36,  73, 219,  54, 146,  36,  73,
            18,  82, 115, 103,  68,  88,  20, 186, 239, 204, 221,  13, 223,
           183, 237, 206,  79, 150, 231, 161, 173,  26, 190, 203, 243, 205,
            22,  73,  18, 123,  28,  39, 157, 255, 198, 154,  45, 108,  49,
           221, 247, 183, 237, 133, 227,  39, 157,   1,  57, 154,  45, 148,
           206, 221, 247,  73,  18,  50, 176, 150, 231,  95,  82,  26, 190,
            53,  12, 205,  22, 183, 237, 174, 140, 103,  68, 168, 235, 186,
           239,  52,  34,  13, 223,  73,  18,   1, 128, 182, 109, 147, 164,
            36,  73,  37, 201, 146,  36, 183, 237, 174, 140, 103,  68, 168,
           235, 186, 239,  52,  34,  13, 223,  73,  18,  50, 176, 150, 231,
            95,  82,  26, 190,  53,  12, 205,  22, 183, 237, 133, 227,  39,
           157,   1,  57, 154,  45, 148, 206, 221, 247,  73,  18, 123,  28,
            39, 157, 255, 198, 154,  45, 108,  49, 221, 247, 183, 237, 206,
            79, 150, 231, 161, 173,  26, 190, 203, 243, 205,  22,  73,  18,
            82, 115, 103,  68,  88,  20, 186, 239, 204, 221,  13, 223, 183,
           237, 255, 127, 182, 109, 109,  91,  36,  73, 219,  54, 146,  36,
            73,  18], dtype=uint8)
  metadata
    {
     "collapsed": false
    }
markdown
    To be able to do something useful with the data, we have to take pairs of 2 bytes and convert them to 16-bit integers. Thereby we have to consider that data in WAV files is stored in *little endian* format (the least significan byte comes first and then the most significant byte), which is specified with `'<'` in the format string.
    
    Let's also reshape the array to get a column for each channel:
code 9
    sig = frombuffer(data, dtype='<i2').reshape(-1, channels)
    sig
  execute_result
  - text/plain
    array([[ 32767,  28086,  23405,  18724,  14043,   9362,   4681],
           [ 29522,  17511,   5208,  -4166,  -8756,  -8435,  -4681],
           [ 20430,  -6250, -21087, -16870,  -3125,   5837,   4681],
           [  7291, -25305, -14593,  11674,  12652,  -2083,  -4681],
           [ -7291, -25305,  14593,  11674, -12652,  -2083,   4681],
           [-20430,  -6250,  21087, -16870,   3125,   5837,  -4681],
           [-29522,  17511,  -5208,  -4166,   8756,  -8435,   4681],
           [-32767,  28086, -23405,  18724, -14043,   9362,  -4681],
           [-29522,  17511,  -5208,  -4166,   8756,  -8435,   4681],
           [-20430,  -6250,  21087, -16870,   3125,   5837,  -4681],
           [ -7291, -25305,  14593,  11674, -12652,  -2083,   4681],
           [  7291, -25305, -14593,  11674,  12652,  -2083,  -4681],
           [ 20430,  -6250, -21087, -16870,  -3125,   5837,   4681],
           [ 29522,  17511,   5208,  -4166,  -8756,  -8435,  -4681],
           [ 32767,  28086,  23405,  18724,  14043,   9362,   4681]], dtype=int16)
  metadata
    {
     "collapsed": false
    }
markdown
    Note that neither `frombuffer()` nor `reshape()` made a copy of the data. We are still using the buffer of bytes we got from `readframes()`. By using the `.base` attribute of the array we get the result of `frombuffer()` (before `reshape()`) and by using `.base` a second time, we get a reference to the original buffer object:
code 10
    sig.base.base is data
  execute_result
  - text/plain
    True
  metadata
    {
     "collapsed": false
    }
markdown
    With the `flags` attribute we get a few details about the buffer. `C_CONTIGUOUS` means that the rows are contiguous (in row-major format, like it's used in C). We also see that `sig` doesn't "own" the data and that it's not writable:
code 11
    sig.flags
  execute_result
  - text/plain
      C_CONTIGUOUS : True
      F_CONTIGUOUS : False
      OWNDATA : False
      WRITEABLE : False
      ALIGNED : True
      UPDATEIFCOPY : False
  metadata
    {
     "collapsed": false
    }
markdown
    We've already got the correct values but if we want to do some signal processing with the data, it's normally easier to convert the numers to floating point format and to normalize them to a range from -1 to 1.
    
    To do that, I wrote a little helper function called `pcm2float()`, located in the file [`utility.py`](https://github.com/mgeier/python-audio/blob/master/audio-files/utility.py), let's load it and apply it to our signal:
code 12
    from utility import pcm2float
    
    normalized = pcm2float(sig, 'float32')
    
    plot(normalized);
  display_data
  - image/png
    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
    
  - text/plain
    <matplotlib.figure.Figure at 0x7fce447883c8>
  metadata
    {
     "collapsed": false
    }
markdown
    Because we change the data type from int16 to float32, a copy of the array is created, which now is writable and "owns" its data:
code 13
    normalized.flags
  execute_result
  - text/plain
      C_CONTIGUOUS : True
      F_CONTIGUOUS : False
      OWNDATA : True
      WRITEABLE : True
      ALIGNED : True
      UPDATEIFCOPY : False
  metadata
    {
     "collapsed": false
    }
markdown
    24-bit files can be opened with `wave.open()` as well, but the conversion is a little more complicated. (See also http://stackoverflow.com/a/17443437/500098)
code 14
    with closing(wave.open('data/test_wav_pcm24.wav')) as w:
        framerate = w.getframerate()
        frames = w.getnframes()
        channels = w.getnchannels()
        width = w.getsampwidth()
        print("sampling rate = {framerate} Hz, length = {frames} samples, channels = {channels}, sample width = {width} bytes".format(**locals()))
        
        data = w.readframes(frames)
  stream stdout
    sampling rate = 44100 Hz, length = 15 samples, channels = 7, sample width = 3 bytes
  metadata
    {
     "collapsed": false
    }
markdown
    Note that the sample width is 3 bytes (because we loaded a 24-bit file). Sadly, there is no 3-byte integer type in NumPy. Therefore, we have to fill each 3-byte number with a further byte and then convert it to a 4-byte integer.
    We can add this byte (filled with zeros) either as most significant or a least significant byte. This doesn't change the precision of the data, we just have to remember which one it was when we do calculations with the stored values.
    If we add the zero-byte as LSB, the resulting values will have the full range of a 4-byte integer, therefore we can use the `pcm2float()` function from above.
    If we would add the zero-byte as MSB, the range would be limited to a 3-byte integer and we would have to write a new function for normalization.
code 15
    assert width == 3
    
    temp = bytearray()
    
    for i in range(0, len(data), 3):
        temp.append(0)
        temp.extend(data[i:i+3])
    
    # Starting with an empty bytearray and extending it on each iteration might be slow.
    # See further below for how to reserve all necessary memory in the beginning.
    
    four_bytes = frombuffer(temp, dtype=uint8).reshape(-1, 4)
    four_bytes
  execute_result
  - text/plain
    array([[  0, 255, 255, 127],
           [  0, 219, 182, 109],
           [  0, 182, 109,  91],
           [  0, 146,  36,  73],
           [  0, 109, 219,  54],
           [  0,  73, 146,  36],
           [  0,  36,  73,  18],
           [  0, 242,  82, 115],
           [  0, 222, 103,  68],
           [  0,  67,  88,  20],
           [  0, 100, 185, 239],
           [  0,  17, 204, 221],
           [  0, 223,  12, 223],
           [  0, 220, 182, 237],
           [  0, 131, 206,  79],
           [  0,  22, 150, 231],
           [  0,  47, 160, 173],
           [  0, 191,  25, 190],
           [  0,  11, 203, 243],
           [  0,  74, 205,  22],
           [  0,  36,  73,  18],
           [  0, 145, 123,  28],
           [  0, 158,  38, 157],
           [  0, 199, 254, 198],
           [  0, 148, 154,  45],
           [  0, 177, 108,  49],
           [  0, 178, 220, 247],
           [  0, 220, 182, 237],
           [  0, 111, 132, 227],
           [  0, 158,  38, 157],
           [  0,  57,   1,  57],
           [  0, 148, 154,  45],
           [  0,  79, 147, 206],
           [  0, 178, 220, 247],
           [  0,  36,  73,  18],
           [  0, 125,  49, 176],
           [  0,  22, 150, 231],
           [  0, 209,  95,  82],
           [  0, 191,  25, 190],
           [  0, 245,  52,  12],
           [  0,  74, 205,  22],
           [  0, 220, 182, 237],
           [  0,  14, 173, 140],
           [  0, 222, 103,  68],
           [  0, 189, 167, 235],
           [  0, 100, 185, 239],
           [  0, 239,  51,  34],
           [  0, 223,  12, 223],
           [  0,  36,  73,  18],
           [  0,   1,   0, 128],
           [  0, 219, 182, 109],
           [  0,  74, 146, 164],
           [  0, 146,  36,  73],
           [  0, 147,  36, 201],
           [  0,  73, 146,  36],
           [  0, 220, 182, 237],
           [  0,  14, 173, 140],
           [  0, 222, 103,  68],
           [  0, 189, 167, 235],
           [  0, 100, 185, 239],
           [  0, 239,  51,  34],
           [  0, 223,  12, 223],
           [  0,  36,  73,  18],
           [  0, 125,  49, 176],
           [  0,  22, 150, 231],
           [  0, 209,  95,  82],
           [  0, 191,  25, 190],
           [  0, 245,  52,  12],
           [  0,  74, 205,  22],
           [  0, 220, 182, 237],
           [  0, 111, 132, 227],
           [  0, 158,  38, 157],
           [  0,  57,   1,  57],
           [  0, 148, 154,  45],
           [  0,  79, 147, 206],
           [  0, 178, 220, 247],
           [  0,  36,  73,  18],
           [  0, 145, 123,  28],
           [  0, 158,  38, 157],
           [  0, 199, 254, 198],
           [  0, 148, 154,  45],
           [  0, 177, 108,  49],
           [  0, 178, 220, 247],
           [  0, 220, 182, 237],
           [  0, 131, 206,  79],
           [  0,  22, 150, 231],
           [  0,  47, 160, 173],
           [  0, 191,  25, 190],
           [  0,  11, 203, 243],
           [  0,  74, 205,  22],
           [  0,  36,  73,  18],
           [  0, 242,  82, 115],
           [  0, 222, 103,  68],
           [  0,  67,  88,  20],
           [  0, 100, 185, 239],
           [  0,  17, 204, 221],
           [  0, 223,  12, 223],
           [  0, 220, 182, 237],
           [  0, 255, 255, 127],
           [  0, 219, 182, 109],
           [  0, 182, 109,  91],
           [  0, 146,  36,  73],
           [  0, 109, 219,  54],
           [  0,  73, 146,  36],
           [  0,  36,  73,  18]], dtype=uint8)
  metadata
    {
     "collapsed": false
    }
markdown
    Now we have a bytearray where each group of 4 bytes represents an integer (in little-endian order).
    
    Next, let's convert it to actual integers and reshape the channels into columns.
code 16
    sig = frombuffer(temp, dtype='<i4').reshape(-1, channels)
    sig
  execute_result
  - text/plain
    array([[ 2147483392,  1840700160,  1533916672,  1227133440,   920349952,
              613566720,   306783232],
           [ 1934815744,  1147657728,   341328640,  -273062912,  -573828864,
             -552804608,  -306783232],
           [ 1338934016,  -409594368, -1382011136, -1105608960,  -204797184,
              382552576,   306783232],
           [  477860096, -1658413568,  -956381440,   765105152,   829206784,
             -136531456,  -306783232],
           [ -477860096, -1658413568,   956381440,   765105152,  -829206784,
             -136531456,   306783232],
           [-1338934016,  -409594368,  1382011136, -1105608960,   204797184,
              382552576,  -306783232],
           [-1934815744,  1147657728,  -341328640,  -273062912,   573828864,
             -552804608,   306783232],
           [-2147483392,  1840700160, -1533916672,  1227133440,  -920349952,
              613566720,  -306783232],
           [-1934815744,  1147657728,  -341328640,  -273062912,   573828864,
             -552804608,   306783232],
           [-1338934016,  -409594368,  1382011136, -1105608960,   204797184,
              382552576,  -306783232],
           [ -477860096, -1658413568,   956381440,   765105152,  -829206784,
             -136531456,   306783232],
           [  477860096, -1658413568,  -956381440,   765105152,   829206784,
             -136531456,  -306783232],
           [ 1338934016,  -409594368, -1382011136, -1105608960,  -204797184,
              382552576,   306783232],
           [ 1934815744,  1147657728,   341328640,  -273062912,  -573828864,
             -552804608,  -306783232],
           [ 2147483392,  1840700160,  1533916672,  1227133440,   920349952,
              613566720,   306783232]], dtype=int32)
  metadata
    {
     "collapsed": false
    }
markdown
    Let's put this into a function, just in case we find ourselves needing to load 24-bit WAV files some time in the future.
code 17
    def pcm24to32_bytearray(data, channels=1):
        if len(data) % 3 != 0:
            raise ValueError("Size of data must be a multiple of 3 bytes")
    
        size = len(data) // 3
        
        # reserve memory (initialized with null bytes):
        temp = bytearray(size * 4)
    
        for i in range(size):
            newidx = i * 4 + 1
            oldidx = i * 3
            temp[newidx:newidx+3] = data[oldidx:oldidx+3]
    
        return np.frombuffer(temp, dtype='<i4').reshape(-1, channels)
  metadata
    {
     "collapsed": false
    }
markdown
    This looks a bit clumsy (TODO: timing measurements!), let's try it another way:
code 18
    def pcm24to32_view(data, channels=1):
        if len(data) % 3 != 0:
            raise ValueError("Size of data must be a multiple of 3 bytes")
    
        temp = np.zeros((len(data) // 3, 4), dtype='B')
        temp[:, 1:] = np.frombuffer(data, dtype='B').reshape(-1, 3)
        return temp.view('<i4').reshape(-1, channels)
  metadata
    {
     "collapsed": false
    }
markdown
    This is what we're doing here:
    * create a zero-initialized array of bytes with 4 columns
    * write the data to the last 3 columns (leaving the first column filled with zeros)
    * interpret each row (4 bytes) as one integer
    
    I think this is better than `pcm24to32_bytearray()`, but it still has a little flaw: the returned array doesn't own it's data.
code 19
    sig = pcm24to32_view(data, channels)
    sig.flags.owndata
  execute_result
  - text/plain
    False
  metadata
    {
     "collapsed": false
    }
markdown
    This is because a *view* is returned. The original array (with its 4 columns) has exactly the same values as the array `four_bytes` which we were using before.
code 20
    all(sig.base == four_bytes)
  execute_result
  - text/plain
    True
  metadata
    {
     "collapsed": false
    }
markdown
    So instead of returning a view, let's turn this around and create the correct array first and use a view internally to copy the data.
    Additionally, instead of using the `reshape()` method (which would also return a view), we directly set the shape.
code 21
    def pcm24to32(data, channels=1):
        if len(data) % 3 != 0:
            raise ValueError("Size of data must be a multiple of 3 bytes")
        
        out = np.zeros(len(data) // 3, dtype='<i4')
        out.shape = -1, channels
        temp = out.view('B').reshape(-1, 4)
        temp[:, 1:] = np.frombuffer(data, dtype='B').reshape(-1, 3)
        return out
  metadata
    {
     "collapsed": false
    }
markdown
    I think this one is better. Now the returned array owns its data:
code 22
    sig = pcm24to32(data, channels)
    sig.flags.owndata
  execute_result
  - text/plain
    True
  metadata
    {
     "collapsed": false
    }
markdown
    BTW, the result of all three functions is of course the same:
code 23
    all(sig == pcm24to32_view(data, channels)), all(sig == pcm24to32_bytearray(data, channels))
  execute_result
  - text/plain
    (True, True)
  metadata
    {
     "collapsed": false
    }
markdown
    Finally, we convert the 32-bit integer values to 32-bit floating point values and normalize them to a range from -1 to 1 (see above).
code 24
    normalized = pcm2float(sig, float32)
    plot(normalized);
  display_data
  - image/png
    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
    AAAASUVORK5CYII=
    
  - text/plain
    <matplotlib.figure.Figure at 0x7fce447f2908>
  metadata
    {
     "collapsed": false
    }
markdown
    WAVEX doesn't work:
code 25
    import traceback
    try:
        w = wave.open('data/test_wavex_pcm16.wav')
    except:
        traceback.print_exc()
    else:
        print("It works (unexpectedly)!")
  stream stderr
    Traceback (most recent call last):
      File "<ipython-input-25-b3a5b32b9f2d>", line 3, in <module>
        w = wave.open('data/test_wavex_pcm16.wav')
      File "/usr/lib/python3.4/wave.py", line 497, in open
        return Wave_read(f)
      File "/usr/lib/python3.4/wave.py", line 163, in __init__
        self.initfp(f)
      File "/usr/lib/python3.4/wave.py", line 143, in initfp
        self._read_fmt_chunk(chunk)
      File "/usr/lib/python3.4/wave.py", line 259, in _read_fmt_chunk
        raise Error('unknown format: %r' % (wFormatTag,))
    wave.Error: unknown format: 65534
  metadata
    {
     "collapsed": false
    }
markdown
    Let's try 32-bit float:
code 26
    try:
        w = wave.open('data/test_wav_float32.wav')
    except:
        traceback.print_exc()
    else:
        print("It works (unexpectedly)!")
  stream stderr
    Traceback (most recent call last):
      File "<ipython-input-26-1b1692fc5dc7>", line 2, in <module>
        w = wave.open('data/test_wav_float32.wav')
      File "/usr/lib/python3.4/wave.py", line 497, in open
        return Wave_read(f)
      File "/usr/lib/python3.4/wave.py", line 163, in __init__
        self.initfp(f)
      File "/usr/lib/python3.4/wave.py", line 143, in initfp
        self._read_fmt_chunk(chunk)
      File "/usr/lib/python3.4/wave.py", line 259, in _read_fmt_chunk
        raise Error('unknown format: %r' % (wFormatTag,))
    wave.Error: unknown format: 3
  metadata
    {
     "collapsed": false
    }
markdown
    ## Writing
markdown
    TODO
code 26
    
  metadata
    {
     "collapsed": false
    }
markdown
    Another way (without NumPy): http://soledadpenades.com/2009/10/29/fastest-way-to-generate-wav-files-in-python-using-the-wave-module/
    
    
markdown
    ## Version Info
code 27
    import sys, IPython
    print("Versions: NumPy = {}; IPython = {}".format(numpy.__version__, IPython.__version__))
    
    print("Python interpreter:")
    print(sys.version)
  stream stdout
    Versions: NumPy = 1.8.1; IPython = 2.1.0
    Python interpreter:
    3.4.1+ (default, Aug 10 2014, 13:20:12) 
    [GCC 4.9.1]
  metadata
    {
     "collapsed": false
    }
markdown
    <p xmlns:dct="http://purl.org/dc/terms/">
      <a rel="license"
         href="http://creativecommons.org/publicdomain/zero/1.0/">
        <img src="http://i.creativecommons.org/p/zero/1.0/88x31.png" style="border-style: none;" alt="CC0" />
      </a>
      <br />
      To the extent possible under law,
      <span resource="[_:publisher]" rel="dct:publisher">
        <span property="dct:title">Matthias Geier</span></span>
      has waived all copyright and related or neighboring rights to
      this work.
    </p>
metadata
    {
     "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
     },
     "language_info": {
      "codemirror_mode": {
       "name": "ipython",
       "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.4.3"
     }
    }
